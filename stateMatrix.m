function sma = stateMatrix()
global BpodSystem
global TaskParameters
%% Define ports
LeftPort = floor(mod(TaskParameters.GUI.Ports_LMR/100,10));
CenterPort = floor(mod(TaskParameters.GUI.Ports_LMR/10,10));
RightPort = mod(TaskParameters.GUI.Ports_LMR,10);
ValveTimes  = GetValveTimes(TaskParameters.GUI.rewardAmount, [LeftPort RightPort]);
LeftPortOut = strcat('Port',num2str(LeftPort),'Out');
CenterPortOut = strcat('Port',num2str(CenterPort),'Out');
RightPortOut = strcat('Port',num2str(RightPort),'Out');
LeftPortIn = strcat('Port',num2str(LeftPort),'In');
CenterPortIn = strcat('Port',num2str(CenterPort),'In');
RightPortIn = strcat('Port',num2str(RightPort),'In');

LeftValve = 2^(LeftPort-1);
RightValve = 2^(RightPort-1);

LeftValveTime  = GetValveTimes(TaskParameters.GUI.rewardAmount, LeftPort);
RightValveTime  = GetValveTimes(TaskParameters.GUI.rewardAmount, RightPort);

if BpodSystem.Data.Custom.Baited.Left(end)
    LeftPokeAction = 'rewarded_Lin';
else
    LeftPokeAction = 'unrewarded_Lin';
end
if BpodSystem.Data.Custom.Baited.Right(end)
    RightPokeAction = 'rewarded_Rin';
else
    RightPokeAction = 'unrewarded_Rin';
end

%Wire1 settings
%no video default
Wire1Out = {};
if TaskParameters.GUI.Wire1VideoTrigger % video
    Wire1Out =	{'WireState', 1};
end

%%
sma = NewStateMatrix();
sma = SetGlobalTimer(sma,1,TaskParameters.GUI.FeedbackDelay);


sma = AddState(sma, 'Name', 'state_0',...
    'Timer', 0.05,...
    'StateChangeConditions', {'Tup', 'PreITI'},...
    'OutputActions', Wire1Out);

sma = AddState(sma, 'Name', 'PreITI',...
    'Timer', TaskParameters.GUI.PreITI,...
    'StateChangeConditions', {'Tup', 'wait_Cin'},...
    'OutputActions', {});

sma = AddState(sma, 'Name', 'wait_Cin',...
    'Timer', TaskParameters.GUI.CenterWaitMax,...
    'StateChangeConditions', {CenterPortIn, 'Cin', 'Tup','exit'},...
    'OutputActions', {strcat('PWM',num2str(CenterPort)),255});

sma = AddState(sma, 'Name', 'Cin',...
    'Timer', TaskParameters.GUI.StimDelay,...
    'StateChangeConditions', {CenterPortOut, 'EarlyCout','Tup','stillSampling'},...
    'OutputActions', {});
if TaskParameters.GUI.LoopbackFix
    smaChange = {'Tup','wait_Cin'};
    smaOut = {};
else
    smaChange = {'Tup','exit'};
    smaOut = {'SoftCode',1};
end
sma = AddState(sma, 'Name', 'EarlyCout',...
        'Timer', TaskParameters.GUI.EarlyCoutPenalty,...
        'StateChangeConditions', smaChange,...
        'OutputActions', smaOut);
sma = AddState(sma, 'Name', 'stillSampling',...
    'Timer', 0,...
    'StateChangeConditions', {CenterPortOut, 'wait_Sin'},...
    'OutputActions', {'SoftCode',2});
sma = AddState(sma, 'Name', 'wait_Sin',...
    'Timer',TaskParameters.GUI.ChoiceDeadline,...
    'StateChangeConditions', {LeftPortIn,'start_Lin',RightPortIn,'start_Rin','Tup','ITI'},...
    'OutputActions',{strcat('PWM',num2str(LeftPort)),255,strcat('PWM',num2str(RightPort)),255});
sma = AddState(sma,'Name', 'start_Lin',...
    'Timer', 0,...
    'StateChangeConditions', {'Tup','Lin'},...
    'OutputActions',{'GlobalTimerTrig',1});
sma = AddState(sma,'Name', 'start_Rin',...
    'Timer', 0,...
    'StateChangeConditions', {'Tup','Rin'},...
    'OutputActions',{'GlobalTimerTrig',1});

smaChange = {LeftPortOut, 'Lin_grace'};
switch LeftPokeAction
    case 'rewarded_Lin'
        smaChange = {smaChange{:},'GlobalTimer1_End','rewarded_Lin','Tup','rewarded_Lin'};
    case 'unrewarded_Lin'
        if TaskParameters.GUI.CatchUnrwd
            smaChange = {smaChange{:},'GlobalTimer1_End','stillLin','Tup','stillLin'};
        else
            smaChange = {smaChange{:},'GlobalTimer1_End','unrewarded_Lin','Tup','unrewarded_Lin'};
        end
end
sma = AddState(sma, 'Name', 'Lin',...
    'Timer', TaskParameters.GUI.FeedbackDelay,...
    'StateChangeConditions', smaChange,...
    'OutputActions', {});
sma = AddState(sma, 'Name', 'stillLin',...
    'Timer', 0,...
    'StateChangeConditions', {LeftPortOut,'stillLin_grace'},...
    'OutputActions', {});
sma = AddState(sma, 'Name', 'Lin_grace',...
    'Timer', TaskParameters.GUI.Grace,...
    'StateChangeConditions', {LeftPortIn,'Lin','Tup', 'EarlyLout','GlobalTimer1_End','EarlyLout'},...
    'OutputActions', {});
sma = AddState(sma, 'Name', 'stillLin_grace',...
    'Timer', TaskParameters.GUI.Grace,...
    'StateChangeConditions', {LeftPortIn,'stillLin','Tup', 'unrewarded_Lin'},...
    'OutputActions', {});

smaChange = {RightPortOut, 'Rin_grace'};
switch RightPokeAction
    case 'rewarded_Rin'
        smaChange = {smaChange{:},'GlobalTimer1_End','rewarded_Rin','Tup','rewarded_Rin'};
    case 'unrewarded_Rin'
        if TaskParameters.GUI.CatchUnrwd
            smaChange = {smaChange{:},'GlobalTimer1_End','stillRin','Tup','stillRin'};
        else
            smaChange = {smaChange{:},'GlobalTimer1_End','unrewarded_Rin','Tup','unrewarded_Rin'};
        end
end
sma = AddState(sma, 'Name', 'Rin',...
    'Timer', TaskParameters.GUI.FeedbackDelay,...
    'StateChangeConditions', smaChange,...
    'OutputActions', {});
sma = AddState(sma, 'Name', 'stillRin',...
    'Timer', 0,...
    'StateChangeConditions', {RightPortOut,'stillRin_grace'},...
    'OutputActions', {});
sma = AddState(sma, 'Name', 'Rin_grace',...
    'Timer', TaskParameters.GUI.Grace,...
    'StateChangeConditions', {RightPortIn,'Rin','Tup', 'EarlyRout','GlobalTimer1_End','EarlyRout'},...
    'OutputActions', {});
sma = AddState(sma, 'Name', 'stillRin_grace',...
    'Timer', TaskParameters.GUI.Grace,...
    'StateChangeConditions', {RightPortIn,'stillRin','Tup', 'unrewarded_Rin'},...
    'OutputActions', {});

sma = AddState(sma, 'Name', 'rewarded_Lin',...
    'Timer', 0,...
    'StateChangeConditions', {'Tup','water_L'},...
    'OutputActions', {});
sma = AddState(sma, 'Name', 'rewarded_Rin',...
    'Timer', 0,...
    'StateChangeConditions', {'Tup','water_R'},...
    'OutputActions', {});
sma = AddState(sma, 'Name', 'water_L',...
    'Timer', LeftValveTime,...
    'StateChangeConditions', {'Tup','DrinkingL'},...
    'OutputActions', {'ValveState', LeftValve});
sma = AddState(sma, 'Name', 'water_R',...
    'Timer', RightValveTime,...
    'StateChangeConditions', {'Tup','DrinkingR'},...
    'OutputActions', {'ValveState', RightValve});


sma = AddState(sma, 'Name', 'DrinkingL',...
    'Timer', TaskParameters.GUI.DrinkingTime,...
    'StateChangeConditions', {'Tup','ITI', LeftPortOut,  'DrinkingGraceL'},...
    'OutputActions', {});
sma = AddState(sma, 'Name', 'DrinkingR',...
    'Timer', TaskParameters.GUI.DrinkingTime,...
    'StateChangeConditions', {'Tup','ITI', RightPortOut, 'DrinkingGraceR'},...
    'OutputActions', {});


sma = AddState(sma, 'Name', 'DrinkingGraceR',...
    'Timer', TaskParameters.GUI.DrinkingGrace,...
    'StateChangeConditions', {'Tup','ITI', RightPortIn, 'DrinkingR'},...
    'OutputActions', {});
sma = AddState(sma, 'Name', 'DrinkingGraceL',...
    'Timer', TaskParameters.GUI.DrinkingGrace,...
    'StateChangeConditions', {'Tup','ITI', LeftPortIn, 'DrinkingL'},...
    'OutputActions', {});

smaOut = {'SoftCode',3};
if TaskParameters.GUI.CatchUnrwd
    smaOut = {};
end
sma = AddState(sma, 'Name', 'unrewarded_Lin',...
    'Timer', 0,...
    'StateChangeConditions', {'Tup','ITI'},...
    'OutputActions', smaOut);
sma = AddState(sma, 'Name', 'unrewarded_Rin',...
    'Timer', 0,...
    'StateChangeConditions', {'Tup','ITI'},...
    'OutputActions', smaOut);

smaOut = {'SoftCode',1};
smaTimer = TaskParameters.GUI.EarlySoutPenalty;
if TaskParameters.GUI.CatchUnrwd
    smaOut = {};
    smaTimer = 0;
end
sma = AddState(sma, 'Name', 'EarlyLout',...
    'Timer', smaTimer,...
    'StateChangeConditions', {'Tup','ITI'},...
    'OutputActions', smaOut);
sma = AddState(sma, 'Name', 'EarlyRout',...
    'Timer', smaTimer,...
    'StateChangeConditions', {'Tup','ITI'},...
    'OutputActions', smaOut);

smaTimer = TaskParameters.GUI.ITI;
if TaskParameters.GUI.VI
    smaTimer = exprnd(smaTimer);
end
sma = AddState(sma, 'Name', 'ITI',...
    'Timer',smaTimer,...
    'StateChangeConditions',{'Tup','exit'},...
    'OutputActions',{});
end